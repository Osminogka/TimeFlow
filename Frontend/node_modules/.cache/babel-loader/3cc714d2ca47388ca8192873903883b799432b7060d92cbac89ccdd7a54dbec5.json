{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"social-entity-container\"\n};\nconst _hoisted_2 = {\n  class: \"name-display\"\n};\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"p\", _hoisted_2, _toDisplayString(_ctx.name), 1 /* TEXT */), _ctx.type === 'friend' ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.friendRequest && _ctx.friendRequest(...args)),\n    class: \"invite-friend-button custom-button\"\n  })) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_toDisplayString","_ctx","name","type","key","onClick","_cache","args","friendRequest","_createCommentVNode"],"sources":["E:\\Programming\\Server\\TimeFlow\\Frontend\\src\\view\\SocialEntity.vue"],"sourcesContent":["<script setup>\r\nimport { defineProps, defineEmits } from 'vue';\r\n\r\nimport { sendRequest } '@/services/api/friends';\r\n\r\nconst props = defineProps({\r\n    name: String,\r\n});\r\n\r\nconst emits = defineEmits(['friend-request', 'group-enter']);\r\n\r\nasync function friendRequest(){\r\n    let response = await sendRequest(props.name);\r\n    if(response.success)\r\n        emits('friend-request',props.name);\r\n}\r\n\r\n</script>\r\n\r\n<template>\r\n    <div class=\"social-entity-container\">\r\n        <p class=\"name-display\">{{ name }}</p>\r\n        <button v-if=\"type === 'friend'\" @click=\"friendRequest\" class=\"invite-friend-button custom-button\"></button>\r\n    </div>\r\n</template>\r\n\r\n<style scoped>\r\n\r\n.social-entity-container{\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    border: 1px solid black;\r\n    border-radius: 5px;\r\n    margin: 10px;\r\n    width: 20em;\r\n    padding: 10px;\r\n}\r\n\r\n.name-display{\r\n    align-self: flex-start;\r\n}\r\n\r\n.invite-friend-button{\r\n    background-image: url('../assets/svgs/addfriend.svg');\r\n    background-color: white;\r\n}\r\n\r\n.custom-button{\r\n    background-position: center;\r\n    background-size:contain;\r\n    background-repeat: no-repeat;\r\n    border: none;\r\n    width: 2em;\r\n    height: 2em;\r\n    cursor: pointer;\r\n}\r\n\r\n@media (max-width: 600px){\r\n    .social-entity-container{\r\n        width: 10em;\r\n    }\r\n}\r\n</style>"],"mappings":";;EAoBSA,KAAK,EAAC;AAAyB;;EAC7BA,KAAK,EAAC;AAAc;;uBAD3BC,mBAAA,CAGM,OAHNC,UAGM,GAFFC,mBAAA,CAAsC,KAAtCC,UAAsC,EAAAC,gBAAA,CAAXC,IAAA,CAAAC,IAAI,kBACjBD,IAAA,CAAAE,IAAI,iB,cAAlBP,mBAAA,CAA4G;IAtBpHQ,GAAA;IAsB0CC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEN,IAAA,CAAAO,aAAA,IAAAP,IAAA,CAAAO,aAAA,IAAAD,IAAA,CAAa;IAAEZ,KAAK,EAAC;QAtBtEc,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}