{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport auth from '@/services/api/auth';\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nexport default {\n  __name: 'RegisterPage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const username = ref('');\n    const email = ref('');\n    const password = ref('');\n    const errorMessage = ref('');\n    const router = useRouter();\n    async function handleLogin() {\n      try {\n        let result = await auth.register(username.value, email.value, password.value);\n        if (result.success) {\n          router.push('/');\n        } else {\n          errorMessage.value = result.message;\n        }\n      } catch (error) {\n        errorMessage.value = error.message;\n      }\n    }\n    function verifyLogin() {\n      errorMessage.value = '';\n      if (email.value === '' || password.value === '' || username.value === '') {\n        errorMessage.value = 'Please fill in all fields';\n      } else if (password.value.length < 8) {\n        errorMessage.value = 'Password must be at least 8 characters';\n      } else if (!email.value.includes('@') || !email.value.includes('.')) {\n        errorMessage.value = 'Invalid email address';\n      } else if (username.value.length < 4) {\n        errorMessage.value = 'Username must be at least 4 characters';\n      }\n      if (errorMessage.value === '') {\n        handleLogin();\n      }\n    }\n    const __returned__ = {\n      username,\n      email,\n      password,\n      errorMessage,\n      router,\n      handleLogin,\n      verifyLogin,\n      get auth() {\n        return auth;\n      },\n      ref,\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["auth","ref","useRouter","username","email","password","errorMessage","router","handleLogin","result","register","value","success","push","message","error","verifyLogin","length","includes"],"sources":["/home/osminogka/Desktop/Programming/Csharp/TimeFlow/Frontend/src/components/RegisterPage.vue"],"sourcesContent":["<script setup>\nimport auth from '@/services/api/auth';\n\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\n\nconst username = ref('');\nconst email = ref('');\nconst password = ref('');\nconst errorMessage = ref('');\n\nconst router = useRouter();\n\nasync function handleLogin() {\n    try {\n        let result = await auth.register(username.value, email.value, password.value);\n        if (result.success) {\n            router.push('/');\n        } else {\n            errorMessage.value = result.message;\n        }\n    } catch (error) {\n        errorMessage.value = error.message;\n    }\n}\n\nfunction verifyLogin() {\n    errorMessage.value = '';\n\n    if (email.value === '' || password.value === '' || username.value === '') {\n        errorMessage.value = 'Please fill in all fields';\n    } else if (password.value.length < 8) {\n        errorMessage.value = 'Password must be at least 8 characters';\n    } else if (!email.value.includes('@') || !email.value.includes('.')) {\n        errorMessage.value = 'Invalid email address';\n    } else if (username.value.length < 4) {\n        errorMessage.value = 'Username must be at least 4 characters';\n    }\n\n    if (errorMessage.value === '') {\n        handleLogin();\n    }\n}\n\n</script>\n\n<template>\n    <div class=\"register-form\">\n        <h1>üîê Register</h1>\n        <form @submit.prevent=\"register\">\n            <input class=\"input-field\" type=\"text\" id=\"username\" v-model=\"username\" placeholder=\"Username\" required>\n            <input class=\"input-field\" type=\"email\" id=\"email\" v-model=\"email\" placeholder=\"Email\" required>\n            <input class=\"input-field\" type=\"password\" id=\"password\" v-model=\"password\" placeholder=\"Password\" required>\n            <button class=\"submit-button\" type=\"submit\" @click.prevent=\"verifyLogin()\">Register</button>\n        </form>\n        <p class=\"error-message\" v-if=\"errorMessage\">{{ errorMessage }}</p>\n        <router-link class=\"button-redirect\" :to=\"{ name: 'Login' }\">Already have an account? Login here!</router-link>\n    </div>\n</template>\n\n<style scoped>\n\n.register-form {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    width: 90%;\n    max-width: 400px;\n    padding: 0.5rem;\n    border-radius: 12px;\n    background: linear-gradient(135deg, #fc92d3, #f373b9);\n    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\n    backdrop-filter: blur(8px);\n    text-align: center;\n    color: #fff;\n    transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\n}\n\n.register-form:hover {\n    transform: scale(1.02);\n    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.2);\n}\n\nh1 {\n    color: #fff;\n    font-size: 1.8rem;\n    margin-bottom: 1rem;\n}\n\n.register-form form {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n}\n\n.input-field {\n    width: 90%;\n    max-width: 300px;\n    margin: 0.5rem 0;\n    padding: 0.7rem;\n    border-radius: 8px;\n    border: none;\n    outline: none;\n    background-color: rgba(255, 255, 255, 0.3);\n    color: #fff;\n    font-size: 1rem;\n    transition: background 0.3s ease-in-out, transform 0.1s ease-in-out;\n}\n\n.input-field::placeholder {\n    color: rgba(255, 255, 255, 0.7);\n}\n\n.input-field:focus {\n    background-color: rgba(255, 255, 255, 0.5);\n    transform: scale(1.02);\n}\n\n.submit-button {\n    cursor: pointer;\n    border: none;\n    padding: 0.7rem 1.2rem;\n    border-radius: 8px;\n    background-color: #ffdd6b;\n    color: black;\n    font-weight: bold;\n    transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\n    margin-top: 2rem;\n    width: 60%;\n    max-width: 200px;\n}\n\n.submit-button:hover {\n    transform: scale(1.05);\n    box-shadow: 0 3px 10px rgba(0, 0, 0, 0.2);\n    background-color: #ffd43b;\n}\n\n.error-message {\n    color: #ff4d4d;\n    font-weight: bold;\n    margin-top: 0.8rem;\n}\n\n.button-redirect {\n    margin-top: 1em;\n}\n\n</style>\n"],"mappings":";AACA,OAAOA,IAAI,MAAM,qBAAqB;AAEtC,SAASC,GAAG,QAAQ,KAAK;AACzB,SAASC,SAAS,QAAQ,YAAY;;;;;;;IAEtC,MAAMC,QAAQ,GAAGF,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMG,KAAK,GAAGH,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMI,QAAQ,GAAGJ,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMK,YAAY,GAAGL,GAAG,CAAC,EAAE,CAAC;IAE5B,MAAMM,MAAM,GAAGL,SAAS,CAAC,CAAC;IAE1B,eAAeM,WAAWA,CAAA,EAAG;MACzB,IAAI;QACA,IAAIC,MAAM,GAAG,MAAMT,IAAI,CAACU,QAAQ,CAACP,QAAQ,CAACQ,KAAK,EAAEP,KAAK,CAACO,KAAK,EAAEN,QAAQ,CAACM,KAAK,CAAC;QAC7E,IAAIF,MAAM,CAACG,OAAO,EAAE;UAChBL,MAAM,CAACM,IAAI,CAAC,GAAG,CAAC;QACpB,CAAC,MAAM;UACHP,YAAY,CAACK,KAAK,GAAGF,MAAM,CAACK,OAAO;QACvC;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZT,YAAY,CAACK,KAAK,GAAGI,KAAK,CAACD,OAAO;MACtC;IACJ;IAEA,SAASE,WAAWA,CAAA,EAAG;MACnBV,YAAY,CAACK,KAAK,GAAG,EAAE;MAEvB,IAAIP,KAAK,CAACO,KAAK,KAAK,EAAE,IAAIN,QAAQ,CAACM,KAAK,KAAK,EAAE,IAAIR,QAAQ,CAACQ,KAAK,KAAK,EAAE,EAAE;QACtEL,YAAY,CAACK,KAAK,GAAG,2BAA2B;MACpD,CAAC,MAAM,IAAIN,QAAQ,CAACM,KAAK,CAACM,MAAM,GAAG,CAAC,EAAE;QAClCX,YAAY,CAACK,KAAK,GAAG,wCAAwC;MACjE,CAAC,MAAM,IAAI,CAACP,KAAK,CAACO,KAAK,CAACO,QAAQ,CAAC,GAAG,CAAC,IAAI,CAACd,KAAK,CAACO,KAAK,CAACO,QAAQ,CAAC,GAAG,CAAC,EAAE;QACjEZ,YAAY,CAACK,KAAK,GAAG,uBAAuB;MAChD,CAAC,MAAM,IAAIR,QAAQ,CAACQ,KAAK,CAACM,MAAM,GAAG,CAAC,EAAE;QAClCX,YAAY,CAACK,KAAK,GAAG,wCAAwC;MACjE;MAEA,IAAIL,YAAY,CAACK,KAAK,KAAK,EAAE,EAAE;QAC3BH,WAAW,CAAC,CAAC;MACjB;IACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}