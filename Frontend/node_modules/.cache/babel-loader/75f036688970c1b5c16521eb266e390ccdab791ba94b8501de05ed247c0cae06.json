{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"social-entity-container\"\n};\nconst _hoisted_2 = {\n  class: \"name-display\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"p\", _hoisted_2, _toDisplayString($props.name), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: $setup.friendRequest,\n    class: \"invite-friend-button custom-button\"\n  })]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_toDisplayString","$props","name","onClick","$setup","friendRequest"],"sources":["/home/osminogka/Desktop/Programming/Csharp/TimeFlow/Frontend/src/view/SocialEntity.vue"],"sourcesContent":["<script setup>\nimport { defineProps, defineEmits } from 'vue';\n\nimport { sendRequest } from '@/services/api/friends';\n\nconst props = defineProps({\n    name: String,\n});\n\nconst emits = defineEmits(['friend-request', 'group-enter']);\n\nasync function friendRequest(){\n    let response = await sendRequest(props.name);\n    if(response.success)\n        emits('friend-request',props.name);\n}\n\n</script>\n\n<template>\n    <div class=\"social-entity-container\">\n        <p class=\"name-display\">{{ name }}</p>\n        <button @click=\"friendRequest\" class=\"invite-friend-button custom-button\"></button>\n    </div>\n</template>\n\n<style scoped>\n\n.social-entity-container{\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    border: 1px solid black;\n    border-radius: 5px;\n    margin: 10px;\n    width: 20em;\n    padding: 10px;\n}\n\n.name-display{\n    align-self: flex-start;\n}\n\n.invite-friend-button{\n    background-image: url('../assets/svgs/addfriend.svg');\n    background-color: #f373b9;\n    background-color: white;\n}\n\n.custom-button{\n    background-position: center;\n    background-size:contain;\n    background-repeat: no-repeat;\n    border: none;\n    width: 2em;\n    height: 2em;\n    cursor: pointer;\n}\n\n@media (max-width: 600px){\n    .social-entity-container{\n        width: 10em;\n    }\n}\n</style>"],"mappings":";;EAoBSA,KAAK,EAAC;AAAyB;;EAC7BA,KAAK,EAAC;AAAc;;uBAD3BC,mBAAA,CAGM,OAHNC,UAGM,GAFFC,mBAAA,CAAsC,KAAtCC,UAAsC,EAAAC,gBAAA,CAAXC,MAAA,CAAAC,IAAI,kBAC/BJ,mBAAA,CAAmF;IAA1EK,OAAK,EAAEC,MAAA,CAAAC,aAAa;IAAEV,KAAK,EAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}