{"ast":null,"code":"import { openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createBlock($setup[\"Pie\"], {\n    data: $setup.chartData\n  }, null, 8 /* PROPS */, [\"data\"]);\n}","map":{"version":3,"names":["_createBlock","$setup","data","chartData"],"sources":["E:\\Programming\\Server\\TimeFlow\\Frontend\\src\\components\\PieChartComponent.vue"],"sourcesContent":["<script setup>\r\nimport { ref, computed, defineProps } from 'vue';\r\nimport { Pie } from 'vue-chartjs';\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\r\n\r\n// Register Chart.js components\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\n// Props\r\nconst props = defineProps({\r\n  transactions: Array // Reactive transactions array\r\n});\r\n\r\n// Compute chart data reactively\r\nconst chartData = computed(() => {\r\n  const categories = {};\r\n  \r\n  props.transactions.forEach(tx => {\r\n    categories[tx.category] = (categories[tx.category] || 0) + tx.amount;\r\n  });\r\n\r\n  return {\r\n    labels: Object.keys(categories),\r\n    datasets: [\r\n      {\r\n        data: Object.values(categories),\r\n        backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF'],\r\n      }\r\n    ]\r\n  };\r\n});\r\n</script>\r\n\r\n<template>\r\n  <Pie :data=\"chartData\" />\r\n</template>\r\n"],"mappings":";;uBAkCEA,YAAA,CAAyBC,MAAA;IAAnBC,IAAI,EAAED,MAAA,CAAAE;EAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}