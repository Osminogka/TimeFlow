{"ast":null,"code":"const BASE_URL = '/api/authentication';\nimport { saveToken } from '../utils';\nconst postRequest = async (endpoint, data) => {\n  const url = `${BASE_URL}${endpoint}`;\n  const response = await fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  });\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.message || 'API request failed');\n  }\n  return response.json();\n};\nconst login = async (email, password) => {\n  const result = await postRequest('/login', {\n    email,\n    password\n  });\n  if (result.success) saveToken(result.message);\n  return result;\n};\nconst register = async (name, email, password) => {\n  const result = await postRequest('/register', {\n    name,\n    email,\n    password\n  });\n  if (result.success) saveToken(result.message);\n  return result;\n};\nexport default {\n  login,\n  register\n};","map":{"version":3,"names":["BASE_URL","saveToken","postRequest","endpoint","data","url","response","fetch","method","headers","body","JSON","stringify","ok","error","json","Error","message","login","email","password","result","success","register","name"],"sources":["/home/osminogka/Desktop/Programming/Csharp/TimeFlow/Frontend/src/services/api/auth.js"],"sourcesContent":["const BASE_URL = '/api/authentication';\n\nimport { saveToken } from '../utils';\n\nconst postRequest = async (endpoint, data) => {\n    const url = `${BASE_URL}${endpoint}`;\n    const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n        'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n    });\n\n    if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || 'API request failed');\n    }\n\n    return response.json();\n};\n\n\nconst login = async (email, password) => {\n    const result = await postRequest('/login', { email, password });\n    if (result.success)\n        saveToken(result.message);\n    return result;\n};\n\nconst register = async (name, email, password) => {\n    const result = await postRequest('/register', { name, email, password });\n    if (result.success) \n        saveToken(result.message);\n    return result;\n};\n  \nexport default {\n    login,\n    register,\n};"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,qBAAqB;AAEtC,SAASC,SAAS,QAAQ,UAAU;AAEpC,MAAMC,WAAW,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,IAAI,KAAK;EAC1C,MAAMC,GAAG,GAAG,GAAGL,QAAQ,GAAGG,QAAQ,EAAE;EACpC,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,EAAE;IAC9BG,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACT,cAAc,EAAE;IAChB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,IAAI;EAC7B,CAAC,CAAC;EAEF,IAAI,CAACE,QAAQ,CAACO,EAAE,EAAE;IACd,MAAMC,KAAK,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IACnC,MAAM,IAAIC,KAAK,CAACF,KAAK,CAACG,OAAO,IAAI,oBAAoB,CAAC;EAC1D;EAEA,OAAOX,QAAQ,CAACS,IAAI,CAAC,CAAC;AAC1B,CAAC;AAGD,MAAMG,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EACrC,MAAMC,MAAM,GAAG,MAAMnB,WAAW,CAAC,QAAQ,EAAE;IAAEiB,KAAK;IAAEC;EAAS,CAAC,CAAC;EAC/D,IAAIC,MAAM,CAACC,OAAO,EACdrB,SAAS,CAACoB,MAAM,CAACJ,OAAO,CAAC;EAC7B,OAAOI,MAAM;AACjB,CAAC;AAED,MAAME,QAAQ,GAAG,MAAAA,CAAOC,IAAI,EAAEL,KAAK,EAAEC,QAAQ,KAAK;EAC9C,MAAMC,MAAM,GAAG,MAAMnB,WAAW,CAAC,WAAW,EAAE;IAAEsB,IAAI;IAAEL,KAAK;IAAEC;EAAS,CAAC,CAAC;EACxE,IAAIC,MAAM,CAACC,OAAO,EACdrB,SAAS,CAACoB,MAAM,CAACJ,OAAO,CAAC;EAC7B,OAAOI,MAAM;AACjB,CAAC;AAED,eAAe;EACXH,KAAK;EACLK;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}