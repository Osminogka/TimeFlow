{"ast":null,"code":"import { createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"chart-container\"\n};\nconst _hoisted_2 = {\n  class: \"legend\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode($setup[\"Pie\"], {\n    data: $setup.chartData,\n    options: $setup.chartOptions\n  }, null, 8 /* PROPS */, [\"data\"]), _createElementVNode(\"ul\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.categoryValues, (item, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, [_createElementVNode(\"div\", null, [_createElementVNode(\"span\", {\n      class: \"color-box\",\n      style: _normalizeStyle({\n        backgroundColor: item.color\n      })\n    }, null, 4 /* STYLE */), _createTextVNode(\" \" + _toDisplayString(item.category) + \": $\" + _toDisplayString(item.value), 1 /* TEXT */)]), _createElementVNode(\"button\", {\n      class: \"plus-buton\",\n      onClick: _cache[0] || (_cache[0] = _withModifiers($event => $setup.addTransaction(), [\"prevent\"]))\n    })]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","$setup","data","chartData","options","chartOptions","_createElementVNode","_hoisted_2","_Fragment","_renderList","categoryValues","item","index","key","style","_normalizeStyle","backgroundColor","color","_createTextVNode","_toDisplayString","category","value","onClick","_cache","_withModifiers","$event","addTransaction"],"sources":["/home/osminogka/Desktop/Programming/Csharp/TimeFlow/Frontend/src/components/PieChartComponent.vue"],"sourcesContent":["<script setup>\nimport { computed, defineProps } from 'vue';\nimport { Pie } from 'vue-chartjs';\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst props = defineProps({\n  transactions: Array\n});\n\nconst chartData = computed(() => {\n  const categories = {};\n  \n  props.transactions.forEach(tx => {\n    categories[tx.category] = (categories[tx.category] || 0) + tx.amount;\n  });\n\n  return {\n    labels: Object.keys(categories),\n    datasets: [\n      {\n        data: Object.values(categories),\n        backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40'],\n        borderColor: '#ffffff',\n        borderWidth: 2\n      }\n    ]\n  };\n});\n\nconst chartOptions = {\n  responsive: true,\n  plugins: {\n    legend: { display: false },\n    tooltip: {\n      callbacks: {\n        label: (tooltipItem) => `${tooltipItem.label}: $${tooltipItem.raw}`\n      }\n    },\n    datalabels: {\n      color: '#fff',\n      font: { weight: 'bold', size: 14 },\n      formatter: (value, context) => context.chart.data.labels[context.dataIndex]\n    }\n  }\n};\n\nconst categoryValues = computed(() => {\n  return Object.entries(chartData.value.labels).map(([index, category]) => ({\n    category,\n    value: chartData.value.datasets[0].data[index],\n    color: chartData.value.datasets[0].backgroundColor[index]\n  }));\n});\n\nfunction  addTransaction() {\n  console.log('Add Transaction');\n}\n</script>\n\n<template>\n  <div class=\"chart-container\">\n    <Pie :data=\"chartData\" :options=\"chartOptions\" />\n    \n    <ul class=\"legend\">\n      <li v-for=\"(item, index) in categoryValues\" :key=\"index\">\n        <div>\n          <span class=\"color-box\" :style=\"{ backgroundColor: item.color }\"></span>\n          {{ item.category }}: ${{ item.value }}\n        </div>\n        <button class=\"plus-buton\" @click.prevent=\"addTransaction()\" />\n      </li>\n    </ul>\n  </div>\n</template>\n\n<style scoped>\n.chart-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n}\n\n.legend {\n  margin-top: 20px;\n  list-style: none;\n  padding: 0;\n  display: flex;\n  gap: 15px;\n  flex-wrap: wrap;\n  flex-direction: column;\n}\n\n.legend li {\n  display: flex;\n  align-items: center;\n  font-size: 16px;\n  font-weight: bold;\n  color: #333;\n  border-bottom: 1px solid black;\n  justify-content: space-between;\n}\n\n.color-box {\n  width: 15px;\n  height: 15px;\n  display: inline-block;\n  margin-right: 8px;\n  border-radius: 3px;\n}\n\n.plus-buton{\n  background-image: url('../assets/svgs/plus.svg');\n  background-size: cover;\n  width: 2.2em;\n  height: 2.2em;\n  border: none;\n  cursor: pointer;\n  background-size: auto;\n  background-color: #dcaaf4;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  margin: 1em;\n  transition: transform 0.2s ease-in-out, opacity 0.2s ease-in-out;\n}\n\n.plus-buton:hover {\n    transform: scale(1.3);\n    opacity: 0.9;\n}\n</style>\n"],"mappings":";;EA8DOA,KAAK,EAAC;AAAiB;;EAGtBA,KAAK,EAAC;AAAQ;;uBAHpBC,mBAAA,CAYM,OAZNC,UAYM,GAXJC,YAAA,CAAiDC,MAAA;IAA3CC,IAAI,EAAED,MAAA,CAAAE,SAAS;IAAGC,OAAO,EAAEH,MAAA,CAAAI;qCAEjCC,mBAAA,CAQK,MARLC,UAQK,I,kBAPHT,mBAAA,CAMKU,SAAA,QAxEXC,WAAA,CAkEkCR,MAAA,CAAAS,cAAc,EAlEhD,CAkEkBC,IAAI,EAAEC,KAAK;yBAAvBd,mBAAA,CAMK;MANwCe,GAAG,EAAED;IAAK,IACrDN,mBAAA,CAGM,cAFJA,mBAAA,CAAwE;MAAlET,KAAK,EAAC,WAAW;MAAEiB,KAAK,EApExCC,eAAA;QAAAC,eAAA,EAoE6DL,IAAI,CAACM;MAAK;6BApEvEC,gBAAA,CAoEkF,GACxE,GAAAC,gBAAA,CAAGR,IAAI,CAACS,QAAQ,IAAG,KAAG,GAAAD,gBAAA,CAAGR,IAAI,CAACU,KAAK,iB,GAErCf,mBAAA,CAA+D;MAAvDT,KAAK,EAAC,YAAY;MAAEyB,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAvEzCC,cAAA,CAAAC,MAAA,IAuEmDxB,MAAA,CAAAyB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}