{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { authApi } from '@/services/utils';\nimport { ref } from 'vue';\nexport default {\n  __name: 'LoginPage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const email = ref('');\n    const password = ref('');\n    const errorMessage = ref('');\n    async function handleLogin() {\n      try {\n        let result = await authApi.login(email.value, password.value);\n        if (result.success) {\n          router.push('/');\n        } else {\n          errorMessage.value = result.message;\n        }\n      } catch (error) {\n        errorMessage.value = error.message;\n      }\n    }\n    function verifyLogin() {\n      // Reset the error message before validation starts\n      errorMessage.value = '';\n      if (email.value === '' || password.value === '') {\n        errorMessage.value = 'Please fill in all fields';\n      } else if (password.value.length < 8) {\n        errorMessage.value = 'Password must be at least 8 characters';\n      } else if (!email.value.includes('@') || !email.value.includes('.')) {\n        errorMessage.value = 'Invalid email address';\n      }\n\n      // If no error message, proceed to login\n      if (errorMessage.value === '') {\n        handleLogin();\n      }\n    }\n    const __returned__ = {\n      email,\n      password,\n      errorMessage,\n      handleLogin,\n      verifyLogin,\n      get authApi() {\n        return authApi;\n      },\n      ref\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["authApi","ref","email","password","errorMessage","handleLogin","result","login","value","success","router","push","message","error","verifyLogin","length","includes"],"sources":["E:/Programming/Server/TimeFlow/Frontend/src/components/LoginPage.vue"],"sourcesContent":["<script setup>\r\nimport {authApi} from '@/services/utils';\r\n\r\nimport { ref } from 'vue';\r\n\r\nconst email = ref('');\r\nconst password = ref('');\r\nconst errorMessage = ref('');\r\n\r\nasync function handleLogin() {\r\n  try {\r\n    let result = await authApi.login(email.value, password.value);\r\n    if (result.success) {\r\n      router.push('/');\r\n    } else {\r\n      errorMessage.value = result.message;\r\n    }\r\n  } catch (error) {\r\n    errorMessage.value = error.message;\r\n  }\r\n}\r\n\r\nfunction verifyLogin() {\r\n  // Reset the error message before validation starts\r\n  errorMessage.value = '';\r\n\r\n  if (email.value === '' || password.value === '') {\r\n    errorMessage.value = 'Please fill in all fields';\r\n  } else if (password.value.length < 8) {\r\n    errorMessage.value = 'Password must be at least 8 characters';\r\n  } else if (!email.value.includes('@') || !email.value.includes('.')) {\r\n    errorMessage.value = 'Invalid email address';\r\n  }\r\n\r\n  // If no error message, proceed to login\r\n  if (errorMessage.value === '') {\r\n    handleLogin();\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<template>\r\n    <div class=\"register-form\">\r\n        <h1>Login</h1>\r\n        <form @submit.prevent=\"register\">\r\n            <input class=\"input-field\" type=\"email\" id=\"email\" v-model=\"email\" placeholder=\"Email\" required>\r\n            <input class=\"input-field\" type=\"password\" id=\"password\" v-model=\"password\" placeholder=\"Password\" required>\r\n            <button class=\"submit-button\" type=\"submit\">Login</button>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<style scoped>\r\n\r\n.register-form{\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 80%;\r\n    padding: 1rem;\r\n    margin: 1rem;\r\n    border: 1px solid #4437a3;\r\n    border-radius: 5px;\r\n    background-color: #fc92d3;\r\n}\r\n\r\nh1 {\r\n    color: #cf1487;\r\n}\r\n\r\n.register-form form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 100%;\r\n}\r\n\r\n.input-field{\r\n    margin: 0.2rem;\r\n    padding: 0.2rem;\r\n    border-radius: 5px;\r\n    border: 1px solid black;\r\n    width: 80%;\r\n    background-color: #dcaaf4;\r\n}\r\n\r\n.input-field:focus{\r\n    outline: none;\r\n}\r\n\r\n.submit-button{\r\n    display: block;\r\n    cursor: pointer;\r\n    border: 1px solid black;\r\n    padding: 0.3rem;\r\n    border-radius: 5px;\r\n    background-color: #ffdd6b;\r\n    color: black;\r\n    text-wrap: bold;\r\n    text-decoration: none;\r\n    margin-top: 0.5rem;\r\n    width: 40%;\r\n}\r\n\r\n.button-redirect {\r\n    margin-top: 0.5rem;\r\n    text-decoration: none;\r\n}\r\n\r\n@media (min-width: 768px) {\r\n    .register-form{\r\n        width: 40%;\r\n    }\r\n\r\n    .submit-button{\r\n        width: 20%;\r\n    }\r\n\r\n    .input-field{\r\n        width: 30%;\r\n    }\r\n}\r\n\r\n</style>"],"mappings":";AACA,SAAQA,OAAO,QAAO,kBAAkB;AAExC,SAASC,GAAG,QAAQ,KAAK;;;;;;;IAEzB,MAAMC,KAAK,GAAGD,GAAG,CAAC,EAAE,CAAC;IACrB,MAAME,QAAQ,GAAGF,GAAG,CAAC,EAAE,CAAC;IACxB,MAAMG,YAAY,GAAGH,GAAG,CAAC,EAAE,CAAC;IAE5B,eAAeI,WAAWA,CAAA,EAAG;MAC3B,IAAI;QACF,IAAIC,MAAM,GAAG,MAAMN,OAAO,CAACO,KAAK,CAACL,KAAK,CAACM,KAAK,EAAEL,QAAQ,CAACK,KAAK,CAAC;QAC7D,IAAIF,MAAM,CAACG,OAAO,EAAE;UAClBC,MAAM,CAACC,IAAI,CAAC,GAAG,CAAC;QAClB,CAAC,MAAM;UACLP,YAAY,CAACI,KAAK,GAAGF,MAAM,CAACM,OAAO;QACrC;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdT,YAAY,CAACI,KAAK,GAAGK,KAAK,CAACD,OAAO;MACpC;IACF;IAEA,SAASE,WAAWA,CAAA,EAAG;MACrB;MACAV,YAAY,CAACI,KAAK,GAAG,EAAE;MAEvB,IAAIN,KAAK,CAACM,KAAK,KAAK,EAAE,IAAIL,QAAQ,CAACK,KAAK,KAAK,EAAE,EAAE;QAC/CJ,YAAY,CAACI,KAAK,GAAG,2BAA2B;MAClD,CAAC,MAAM,IAAIL,QAAQ,CAACK,KAAK,CAACO,MAAM,GAAG,CAAC,EAAE;QACpCX,YAAY,CAACI,KAAK,GAAG,wCAAwC;MAC/D,CAAC,MAAM,IAAI,CAACN,KAAK,CAACM,KAAK,CAACQ,QAAQ,CAAC,GAAG,CAAC,IAAI,CAACd,KAAK,CAACM,KAAK,CAACQ,QAAQ,CAAC,GAAG,CAAC,EAAE;QACnEZ,YAAY,CAACI,KAAK,GAAG,uBAAuB;MAC9C;;MAEA;MACA,IAAIJ,YAAY,CAACI,KAAK,KAAK,EAAE,EAAE;QAC7BH,WAAW,CAAC,CAAC;MACf;IACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}