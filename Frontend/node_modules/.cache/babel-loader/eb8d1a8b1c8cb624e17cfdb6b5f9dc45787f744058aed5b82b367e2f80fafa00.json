{"ast":null,"code":"import { getToken } from '@/services/utils';\nconst BASE_URL = '/api/user';\nconst token = getToken();\nconst getRequest = async endpoint => {\n  const url = `${BASE_URL}${endpoint}`;\n  const response = await fetch(url, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Baerer ${token}`\n    }\n  });\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.message || 'API request failed');\n  }\n  return response.json();\n};\nconst getUsers = async page => {\n  console.log(page);\n  let response = {\n    success: true,\n    friendList: ['Alice', 'Bob', 'Charlie', 'David']\n  };\n  return response;\n};\nconst chageVisisbility = async () => {\n  return getRequest('/visibility');\n};\nexport default {\n  getUsers,\n  chageVisisbility\n};","map":{"version":3,"names":["getToken","BASE_URL","token","getRequest","endpoint","url","response","fetch","method","headers","ok","error","json","Error","message","getUsers","page","console","log","success","friendList","chageVisisbility"],"sources":["/home/osminogka/Desktop/Programming/Csharp/TimeFlow/Frontend/src/services/api/users.js"],"sourcesContent":["import { getToken } from '@/services/utils';\n\nconst BASE_URL = '/api/user';\nconst token = getToken();\n\nconst getRequest = async (endpoint) => {\n    const url = `${BASE_URL}${endpoint}`;\n    const response = await fetch(url, {\n        method: 'GET',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Baerer ${token}`\n        },\n    });\n\n    if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || 'API request failed');\n    }\n\n    return response.json();\n}\n\nconst getUsers = async (page) => {\n    console.log(page);\n    let response = {\n        success: true,\n        friendList: [\n            'Alice',\n            'Bob',\n            'Charlie',\n            'David',\n        ]\n    }\n    return response;\n    \n}\n\nconst chageVisisbility = async () => {\n    return getRequest('/visibility');\n}\n  \nexport default {\n    getUsers,\n    chageVisisbility,\n};"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,kBAAkB;AAE3C,MAAMC,QAAQ,GAAG,WAAW;AAC5B,MAAMC,KAAK,GAAGF,QAAQ,CAAC,CAAC;AAExB,MAAMG,UAAU,GAAG,MAAOC,QAAQ,IAAK;EACnC,MAAMC,GAAG,GAAG,GAAGJ,QAAQ,GAAGG,QAAQ,EAAE;EACpC,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,EAAE;IAC9BG,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE,UAAUP,KAAK;IACpC;EACJ,CAAC,CAAC;EAEF,IAAI,CAACI,QAAQ,CAACI,EAAE,EAAE;IACd,MAAMC,KAAK,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IACnC,MAAM,IAAIC,KAAK,CAACF,KAAK,CAACG,OAAO,IAAI,oBAAoB,CAAC;EAC1D;EAEA,OAAOR,QAAQ,CAACM,IAAI,CAAC,CAAC;AAC1B,CAAC;AAED,MAAMG,QAAQ,GAAG,MAAOC,IAAI,IAAK;EAC7BC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EACjB,IAAIV,QAAQ,GAAG;IACXa,OAAO,EAAE,IAAI;IACbC,UAAU,EAAE,CACR,OAAO,EACP,KAAK,EACL,SAAS,EACT,OAAO;EAEf,CAAC;EACD,OAAOd,QAAQ;AAEnB,CAAC;AAED,MAAMe,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EACjC,OAAOlB,UAAU,CAAC,aAAa,CAAC;AACpC,CAAC;AAED,eAAe;EACXY,QAAQ;EACRM;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}