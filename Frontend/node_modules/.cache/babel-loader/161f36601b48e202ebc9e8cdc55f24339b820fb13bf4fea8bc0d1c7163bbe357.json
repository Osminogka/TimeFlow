{"ast":null,"code":"import { createElementVNode as _createElementVNode, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $setup.testData ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"h2\", null, \"Test Pie Chart\", -1 /* HOISTED */)), _createVNode($setup[\"PieChart\"], {\n    data: $setup.testData\n  }, null, 8 /* PROPS */, [\"data\"])])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["key","$setup","testData","_createElementBlock","_hoisted_1","_createElementVNode","_createVNode","data","_createCommentVNode"],"sources":["E:\\Programming\\Server\\TimeFlow\\Frontend\\src\\components\\PieChartComponent.vue"],"sourcesContent":["<script setup>\r\nimport { PieChart } from 'vue-chart-3';\r\nimport { ref, watchEffect } from 'vue';\r\n\r\nconst testData = ref(null); // Start with null to ensure Vue notices changes\r\n\r\n// Delay setting data to force a reactivity update\r\nwatchEffect(() => {\r\n  testData.value = {\r\n    labels: ['Food', 'Transport', 'Entertainment'],\r\n    datasets: [\r\n      {\r\n        data: [40, 25, 35],\r\n        backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\r\n      }\r\n    ]\r\n  };\r\n});\r\n</script>\r\n\r\n<template>\r\n  <div v-if=\"testData\">\r\n    <h2>Test Pie Chart</h2>\r\n    <PieChart :data=\"testData\" />\r\n  </div>\r\n</template>\r\n"],"mappings":";;EAAAA,GAAA;AAAA;;SAqBaC,MAAA,CAAAC,QAAQ,I,cAAnBC,mBAAA,CAGM,OAxBRC,UAAA,G,0BAsBIC,mBAAA,CAAuB,YAAnB,gBAAc,sBAClBC,YAAA,CAA6BL,MAAA;IAAlBM,IAAI,EAAEN,MAAA,CAAAC;EAAQ,kC,KAvB7BM,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}