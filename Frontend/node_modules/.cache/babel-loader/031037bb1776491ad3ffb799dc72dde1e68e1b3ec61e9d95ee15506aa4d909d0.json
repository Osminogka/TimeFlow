{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport { ref, computed, watch, onMounted } from 'vue';\nimport { PieChart } from 'vue-chart-3';\nimport { Chart, registerables } from 'chart.js';\nexport default {\n  __name: 'PieChartComponent',\n  props: {\n    transactions: Array\n  },\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    Chart.register(...registerables);\n    const props = __props;\n\n    // Log transactions to check if data exists\n    console.log(\"Props.transactions:\", props.transactions);\n\n    // Ensure transactions are tracked reactively\n    const transactions = ref(props.transactions || []);\n\n    // Watch for changes to transactions (debugging)\n    watch(transactions, newVal => {\n      console.log(\"Updated transactions:\", newVal);\n    }, {\n      deep: true\n    });\n\n    // Compute chart data reactively\n    const chartData = computed(() => {\n      const categories = {};\n      transactions.value.forEach(tx => {\n        categories[tx.category] = (categories[tx.category] || 0) + tx.amount;\n      });\n      return {\n        labels: Object.keys(categories),\n        datasets: [{\n          data: Object.values(categories),\n          backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF']\n        }]\n      };\n    });\n\n    // Log computed chart data\n    watch(chartData, newVal => {\n      console.log(\"Updated chart data:\", newVal);\n    }, {\n      deep: true\n    });\n    onMounted(() => {\n      console.log(\"Mounted with transactions:\", transactions.value);\n    });\n    const __returned__ = {\n      props,\n      transactions,\n      chartData,\n      ref,\n      computed,\n      watch,\n      onMounted,\n      get PieChart() {\n        return PieChart;\n      },\n      get Chart() {\n        return Chart;\n      },\n      get registerables() {\n        return registerables;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","watch","onMounted","PieChart","Chart","registerables","register","props","__props","console","log","transactions","newVal","deep","chartData","categories","value","forEach","tx","category","amount","labels","Object","keys","datasets","data","values","backgroundColor"],"sources":["E:/Programming/Server/TimeFlow/Frontend/src/components/PieChartComponent.vue"],"sourcesContent":["<script setup>\r\nimport { ref, computed, watch, onMounted } from 'vue';\r\nimport { PieChart } from 'vue-chart-3';\r\nimport { Chart, registerables } from 'chart.js';\r\n\r\nChart.register(...registerables);\r\n\r\nconst props = defineProps({\r\n  transactions: Array\r\n});\r\n\r\n// Log transactions to check if data exists\r\nconsole.log(\"Props.transactions:\", props.transactions);\r\n\r\n// Ensure transactions are tracked reactively\r\nconst transactions = ref(props.transactions || []);\r\n\r\n// Watch for changes to transactions (debugging)\r\nwatch(transactions, (newVal) => {\r\n  console.log(\"Updated transactions:\", newVal);\r\n}, { deep: true });\r\n\r\n// Compute chart data reactively\r\nconst chartData = computed(() => {\r\n  const categories = {};\r\n\r\n  transactions.value.forEach(tx => {\r\n    categories[tx.category] = (categories[tx.category] || 0) + tx.amount;\r\n  });\r\n\r\n  return {\r\n    labels: Object.keys(categories),\r\n    datasets: [\r\n      {\r\n        data: Object.values(categories),\r\n        backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF'],\r\n      }\r\n    ]\r\n  };\r\n});\r\n\r\n// Log computed chart data\r\nwatch(chartData, (newVal) => {\r\n  console.log(\"Updated chart data:\", newVal);\r\n}, { deep: true });\r\n\r\nonMounted(() => {\r\n  console.log(\"Mounted with transactions:\", transactions.value);\r\n});\r\n</script>\r\n\r\n<template>\r\n  <div>\r\n    <!-- Debugging: Show raw transaction data -->\r\n    <p v-if=\"!transactions.length\">No transactions available</p>\r\n    <ul v-else>\r\n      <li v-for=\"tx in transactions\" :key=\"tx.category\">\r\n        {{ tx.category }}: {{ tx.amount }}\r\n      </li>\r\n    </ul>\r\n\r\n    <!-- Render PieChart only if thereâ€™s data -->\r\n    <PieChart v-if=\"chartData.labels.length\" :data=\"chartData\" />\r\n  </div>\r\n</template>\r\n"],"mappings":";;AACA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,SAAS,QAAQ,KAAK;AACrD,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,KAAK,EAAEC,aAAa,QAAQ,UAAU;;;;;;;;;;IAE/CD,KAAK,CAACE,QAAQ,CAAC,GAAGD,aAAa,CAAC;IAEhC,MAAME,KAAK,GAAGC,OAEZ;;IAEF;IACAC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEH,KAAK,CAACI,YAAY,CAAC;;IAEtD;IACA,MAAMA,YAAY,GAAGZ,GAAG,CAACQ,KAAK,CAACI,YAAY,IAAI,EAAE,CAAC;;IAElD;IACAV,KAAK,CAACU,YAAY,EAAGC,MAAM,IAAK;MAC9BH,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEE,MAAM,CAAC;IAC9C,CAAC,EAAE;MAAEC,IAAI,EAAE;IAAK,CAAC,CAAC;;IAElB;IACA,MAAMC,SAAS,GAAGd,QAAQ,CAAC,MAAM;MAC/B,MAAMe,UAAU,GAAG,CAAC,CAAC;MAErBJ,YAAY,CAACK,KAAK,CAACC,OAAO,CAACC,EAAE,IAAI;QAC/BH,UAAU,CAACG,EAAE,CAACC,QAAQ,CAAC,GAAG,CAACJ,UAAU,CAACG,EAAE,CAACC,QAAQ,CAAC,IAAI,CAAC,IAAID,EAAE,CAACE,MAAM;MACtE,CAAC,CAAC;MAEF,OAAO;QACLC,MAAM,EAAEC,MAAM,CAACC,IAAI,CAACR,UAAU,CAAC;QAC/BS,QAAQ,EAAE,CACR;UACEC,IAAI,EAAEH,MAAM,CAACI,MAAM,CAACX,UAAU,CAAC;UAC/BY,eAAe,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;QACzE,CAAC;MAEL,CAAC;IACH,CAAC,CAAC;;IAEF;IACA1B,KAAK,CAACa,SAAS,EAAGF,MAAM,IAAK;MAC3BH,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEE,MAAM,CAAC;IAC5C,CAAC,EAAE;MAAEC,IAAI,EAAE;IAAK,CAAC,CAAC;IAElBX,SAAS,CAAC,MAAM;MACdO,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEC,YAAY,CAACK,KAAK,CAAC;IAC/D,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}